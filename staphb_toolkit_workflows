#!/usr/bin/env python3

#authors:
# Kelsey Florek (kelsey.florek@slh.wisc.edu)
# Kevin Libuit (kevin.libuit@dgs.virginia.gov)

import sys,os,re
import argparse
import core.calldocker as cd
import core.sb_programs as sb_prog
from workflows.tredegar.tredegar import tredegar
from workflows.foushee.foushee import foushee
from workflows.dryad.dryad import dryad

if __name__ == '__main__':

    #setup argparser to display help if no arguments
    class MyParser(argparse.ArgumentParser):
        def error(self, message):
            sys.stderr.write('error: %s\n' % message)
            self.print_help()
            sys.exit(2)

    parser = MyParser(usage="staphb_toolkit_workflows [optional arguments] <workflow> [workflow arguments]")
    subparsers = parser.add_subparsers(title='workflow',metavar='',dest="subparser_name",required=True)

    #parser for workflows
    #tredegar-----------------------------------------
    parser_tredegar = subparsers.add_parser('tredegar', help='Quality control of WGS read data', add_help=False)
    parser_tredegar.add_argument('reads_path', type=str,help="path to the location of the reads in a fastq format")
    parser_tredegar.add_argument('-o',metavar='output', type=str,help="output directory - defaults to working directory")
    parser_tredegar.add_argument('-c',metavar='config', type=str,help="path to configuration file")
    parser_tredegar.add_argument('-t',metavar='cpus', type=int,help="number of cpus to use, defaults to 8",default=8)
    parser_tredegar.add_argument('-m',metavar='memory GB', type=int,help="number of GB of memory to use, defaults to 16",default=16)

    #foushee-----------------------------------------
    parser_foushee = subparsers.add_parser('foushee', help='Reference-free SNP analysis of GAS isolates', add_help=False)
    parser_foushee.add_argument('reads_path', type=str,help="path to the location of the reads in a fastq format")
    parser_foushee.add_argument('-o',metavar='output', type=str,help="output directory - defaults to working directory")
    parser_foushee.add_argument('-c',metavar='config', type=str,help="path to configuration file")
    parser_foushee.add_argument('-t',metavar='cpus', type=int,help="number of cpus to use, defaults to 8",default=8)
    parser_foushee.add_argument('-m',metavar='memory GB', type=int,help="number of GB of memory to use, defaults to 16",default=16)

    #dryad-----------------------------------------
    #cg pipeline
    parser_cg = subparsers.add_parser('dryad_cg', help='A pipeline for constructing reference free phylogenies.', add_help=False)
    parser_cg.add_argument('reads', type=str,help="text file listing the location of paired reads to be included in the analysis")
    parser_cg.add_argument('-o',metavar='output', type=str,help="output directory - defaults to working directory")
    parser_cg.add_argument('-t',metavar='threads', type=int,help="number of cpus to use for pipeline - default of 4",default=4)
    #snp pipeline
    parser_snp = subparsers.add_parser('dryad_snp', help='A pipeline for SNP phylogenies using CFSAN SNP pipeline.', add_help=False)
    parser_snp.add_argument('reads', type=str,help="text file listing the location of paired reads to be included in the analysis")
    parser_snp.add_argument('reference_sequence', type=str,help="reference fasta for SNP tree")
    parser_snp.add_argument('-o',metavar='output', type=str,help="output directory - defaults to working directory")
    parser_snp.add_argument('-t',metavar='threads', type=int,help="number of cpus to use for pipeline - default of 4",default=4)
    #all pipelines
    parser_all = subparsers.add_parser('dryad_all', help='A pipeline for both SNP phylogenies using CFSAN SNP pipeline and reference free phylogenies.', add_help=False)
    parser_all.add_argument('reads', type=str,help="text file listing the location of paired reads to be included in the analysis")
    parser_all.add_argument('reference_sequence', type=str,help="reference fasta for SNP tree")
    parser_all.add_argument('-o',metavar='output', type=str,help="output directory - defaults to working directory")
    parser_all.add_argument('-t',metavar='threads', type=int,help="number of cpus to use for pipeline - default of 4",default=4)

    parser_args = parser.parse_known_args()
    program = parser_args[0].subparser_name
    args = parser_args[0]

    #Program specific execution code
    #-----------------------------------------
    if program == 'tredegar':
        tredegar(memory=args.m,cpus=args.t,read_file_path=args.reads_path,output_dir=args.o,configuration=args.c)

    if program == 'foushee':
        foushee(memory=args.m,cpus=args.t,read_file_path=args.reads_path,output_dir=args.o,configuration=args.c)

    if program == 'dryad_cg':
        dryad('cg',args.t,args.o,args.reads)

    if program == 'dryad_snp':
        dryad('snp',args.t,args.o,args.reads,args.reference_sequence)

    if program == 'dryad_all':
        dryad('all',args.t,args.o,args.reads,args.reference_sequence)
